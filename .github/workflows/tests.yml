name: tests

on:
  repository_dispatch:
    types: [successful-build-1]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# jobs can run sequentially or in parallel
jobs:
  goodls:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}
      - uses: Gr1N/setup-poetry@v7
      - uses: actions/setup-go@v2

      - name: cache
        uses: actions/cache@v2
        env:
          cache-name: goodls-cache
        with:
          path: /home/runner/go/bin
          key: ${{ runner.os }}-tests-${{ env.cache-name }}

      - name: goodls_install
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          GOODLS_APIKEY: ${{ secrets.GDRIVE_API_KEY }}
          REPO_URL: ${{ secrets.GDRIVE_REPO_URL }}
          CACHE_HIT: steps.cache.outputs.cache-hit
        run: |
          echo $CACHE_HIT
          go get -u github.com/tanaikech/goodls
          export GOODLS_BIN=$(go env GOPATH)/bin/goodls

  tests:
    runs-on: ubuntu-latest
    needs: goodls
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}
      - uses: Gr1N/setup-poetry@v7
      - uses: actions/setup-go@v2

      - name: goodls_cache
        uses: actions/cache@v2
        env:
          cache-name: goodls-cache
        with:
          path: /home/runner/go/bin
          key: ${{ runner.os }}-tests-${{ env.cache-name }}

      - name: download_data
        env:
          GOODLS_APIKEY: ${{ secrets.GDRIVE_API_KEY }}
          REPO_URL: ${{ secrets.GDRIVE_REPO_URL }}
        run: |
          $GOODLS_BIN --version
          #echo $REPO_URL | $GOODLS_BIN
          #mv raw data
