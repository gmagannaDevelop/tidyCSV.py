name: linting

on:
  repository_dispatch:
    types: [successful-build-1]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}
      - uses: Gr1N/setup-poetry@v7

      - name: Cache poetry env
        uses: actions/cache@v2
        env:
          cache-name: poetry-env-cache
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-build-${{ env.cache-name }}-pyproj-${{ hashFiles('pyproject.toml')}}-lock-${{ hashFiles('poetry.lock')}}

      - name: cache hit test
        if: ${{ env.cache-hit }}
        run: echo 'the cache was hit'

      - name: Lint
        run: |
          poetry run pylint tidycsv/ --ignore=utils | grep -Po '(?<=at)\s(\d\.\d{1,2}|\d\d)/10' | cat > pylint-score.txt

      - name: Upload score to pipedream
        run: |
          curl -d "{ \"pylint_score\": \"$(cat pylint-score.txt)\" }" -H "Content-Type: application/json" https://enlyvfs9zh2z4g7.m.pipedream.net
